{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following jupyter allows us to analise and fit the retrieved data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cmath\n",
    "import math\n",
    "from iminuit.cost import LeastSquares\n",
    "from iminuit import cost\n",
    "import time\n",
    "from iminuit import Minuit, cost\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import h5py\n",
    "from PIL import Image\n",
    "import scipy.special as ss\n",
    "import scipy.constants as sc\n",
    "\n",
    "def ampl(i, q):\n",
    "    return np.power((np.power(q, 2) + np.power(i, 2)), 1/2)\n",
    "\n",
    "def phase(i, q):\n",
    "    return(np.arctan(q / i))\n",
    "\n",
    "def amp_model(x, p1 , p2 , p3, p4, p5, p6,  p7, p8):\n",
    "    return abs((p6*(x) + p7*x**2 + p8*x**3) + p1*(1 - cmath.exp(1j*p4)*p2*(p2**-1 - p3**-1) / (1 + 2j * p2 * ( x - p5 ) / f_min[0] )))\n",
    "\n",
    "def new_amp_model(x, p1, p2 , p3, p4, p5, p6,  p7, p8):\n",
    "    return (p6*x + p7*x**2 + p8*x**3) + p1 * abs ((1 - (1 - p2 / p3) * cmath.exp(1j*p4) / (1 + 2j * p2 * ( x - p5 ) / p5 )))\n",
    "\n",
    "def inv_Qi_model(x, p1, p2, p3, p4):        \n",
    "    return  1/p1 + (2*p2*np.exp(-p3/(sc.k*x))*2*np.sinh(sc.hbar*p4/(2*sc.k*x))*ss.kv(0, sc.hbar*p4/(2*sc.k*x)))/(np.pi*(1-2*np.exp(-p3/(sc.k*x))*np.exp(-sc.hbar*p4/(2*sc.k*x))*ss.iv(0,sc.hbar*p4/(2*sc.k*x))))\n",
    "\n",
    "def plot_amp_and_phase(i, q, f, number_res):        #Plots the amplitude vs f and phase vs f for a single resonator given the i, q, f values\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2)            #And that's for the resonator number 'number_res + 1'\n",
    "    fig.suptitle(\"Plots relative to the resonator number \" + str(number_res + 1) + \"\\n\\n\\n\")\n",
    "\n",
    "    ax1.plot(f, amp, label = 'Amplitude vs f')\n",
    "    ax1.set_title( \"Amplitude\")\n",
    "    ax1.set_xlabel(\"f [GHz]\")\n",
    "    ax1.set_ylabel(\"Amplitude\")\n",
    "\n",
    "    fig.subplots_adjust(wspace=.4)\n",
    "\n",
    "    ax2.set_title(\"Phase\")\n",
    "    ax2.set_xlabel(\"f [GHz]\")\n",
    "    ax2.set_ylabel(\"$\\Phi \\; [rad]$\")\n",
    "\n",
    "    plt.plot(f, phase(i, q), label = 'Phase vs f')\n",
    "    plt.show()\n",
    "    \n",
    "def get_single_res_data(h5file, temp, freq_window, number_res):     # Allows to get important data from the hdf5 file\n",
    "    f1 = freq_window[number_res * 2]\n",
    "    f2 = freq_window[number_res * 2 + 1]\n",
    "    f = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['freqs'][number_res, :]*1e9\n",
    "    i = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['I'][:]\n",
    "    q = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['Q'][:]\n",
    "    return f, i, q\n",
    "\n",
    "def plot_data_and_fit(freqs, original_data, fitted_points, original_data_err = 0., x_axis = 'frequency [Hz]', y_axis = 'magnitude $S_{21}$', title = 'Amplitude vs frequency'):     # Plots superposition of fit and data\n",
    "    plt.errorbar(freqs, original_data, yerr = original_data_err, xerr=None, marker='o', markersize=.8, barsabove=True, elinewidth=.8, capsize=.8, linewidth=0, label = 'data')\n",
    "    plt.title(title)\n",
    "    plt.xlabel(x_axis)\n",
    "    plt.ylabel(y_axis)\n",
    "    plt.plot(freqs, fitted_points, label = 'fit', linewidth = .2)\n",
    "    #plt.title('Superposition of original data and fit')\n",
    "    plt.show()\n",
    "\n",
    "def fit_check(m):\n",
    "    valid, accurate = m.valid, m.accurate\n",
    "    return valid, accurate\n",
    "\n",
    "def new_fit(f, amp, amp_err, new_amp_model): # new fit which is performed without frequency tranlsation\n",
    "    least_squares = LeastSquares(f, amp, amp_err, new_amp_model)\n",
    "    m = Minuit(least_squares, p1 = 1, p2 = 1e4, p3 = 6e4, p4 = -0.5, p5 = 5.5, p6 = -1e2,  p7 = -5e4, p8 = 1e-1)  # starting values for our parameters\n",
    "    m.limits['p2'] = (1e3, 1e7)\n",
    "    m.limits['p3'] = (1e3, 1e7)\n",
    "    m.limits['p5'] = (5.2, 6.0)    \n",
    "    fit = m.migrad()        #This is the command that performs the fit\n",
    "    return fit, m  \n",
    "\n",
    "freq_window = np.array([5.340, 5.355, 5.568, 5.583, 5.667, 5.682, 5.978, 5.987])\n",
    "    "
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First of all we decide what uncertainty assign to every measure of the $S_{21}$ module. We acquired data using two different bandwidth settings: $10Hz$ and $30Hz$. In particular, we have data for temperatures between $33mK$ and $260mK$. Much of that (multiples of $5$ from $35mK$ to $115mK$ circa) have been acquired in the cleanest way possible, by using the lowest bandwidth. How can we set up errors so they account for this difference in precision? Better: how does signal precision manifest itself when we compute $S_{21}$ amplitude? To answer these questions we should consider the two different dataset in a certain configuration, for example at the intermediate temperature of $105mK$ and $103mK$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x23b40988220>]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h5file_10 = h5py.File('Values_different_frequency_sweeps_105mKFeb_17_2023-17_42_07.h5', 'r')\n",
    "freq_10, i_10, q_10 = get_single_res_data(h5file_10, 105, freq_window, 1)\n",
    "h5file_30 = h5py.File('Values_different_frequency_sweeps_103mKFeb_16_2023-16_06_46.h5', 'r')\n",
    "freq_30, i_30, q_30 = get_single_res_data(h5file_30, 103, freq_window, 1)\n",
    "\n",
    "amp_10 = ampl(i_10, q_10)/np.max(ampl(i_10, q_10))\n",
    "amp_30 = ampl(i_30, q_30)/np.max(ampl(i_30, q_30))\n",
    "\n",
    "nearby_diff_10 = abs(amp_10 - np.append(amp_10[1:1601], [0]))\n",
    "nearby_diff_30 = abs(amp_30 - np.append(amp_30[1:1601], [0]))\n",
    "\n",
    "plt.plot(freq_30[:1600], nearby_diff_30[:1600])\n",
    "plt.plot(freq_10[:1600], nearby_diff_10[:1600])"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see, by focusing on a range of frequencies far away from the resonance (this is fundamental: in this region background noise is highly dominating when passing from a frequency point to the next), that background noise is reduced by about a factor of $2$. We should the information stored in the arrays we defined in the code cell above ($\\textit{nearby\\_diff\\_30}$ and $\\textit{nearby\\_diff\\_10}$) to recover a good estimation for the uncertainty. A good idea would be to compute the average value of these arrays (we ensured they are positive - definite, so indeed we are computing an average error). Let's now proceed and open the data files. First of all we define the temperatures we are going to analyse and after which we named our datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Set parameters to open the correct file and define necessary variables\n",
    "temps = np.arange(35, 120, 5)  \n",
    "temps = np.append(temps, np.arange(33, 113, 5))     \n",
    "temps = np.append(temps, np.arange(118, 208, 5))\n",
    "temps = np.append(temps, np.arange(208, 248, 10))\n",
    "#temps = np.append(temps, np.arange(288, 358, 10))\n",
    "\n",
    "temps = np.sort(temps)\n",
    "ttemps = temps #temporary variable to store temps. It will be useful later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "temp 33mK done\n",
      "temp 35mK done\n",
      "temp 38mK done\n",
      "temp 40mK done\n",
      "temp 43mK done\n",
      "temp 45mK done\n",
      "temp 48mK done\n",
      "temp 50mK done\n",
      "temp 53mK done\n",
      "temp 55mK done\n",
      "temp 58mK done\n",
      "temp 60mK done\n",
      "temp 63mK done\n",
      "temp 65mK done\n",
      "temp 68mK done\n",
      "temp 70mK done\n",
      "temp 73mK done\n",
      "temp 75mK done\n",
      "temp 78mK done\n",
      "temp 80mK done\n",
      "temp 83mK done\n",
      "temp 85mK done\n",
      "temp 88mK done\n",
      "temp 90mK done\n",
      "temp 93mK done\n",
      "temp 95mK done\n",
      "temp 98mK done\n",
      "temp 100mK done\n",
      "temp 103mK done\n",
      "temp 105mK done\n",
      "temp 108mK done\n",
      "temp 110mK done\n",
      "temp 115mK done\n",
      "temp 118mK done\n",
      "temp 123mK done\n",
      "temp 128mK done\n",
      "temp 133mK done\n",
      "temp 138mK done\n",
      "temp 143mK done\n",
      "temp 148mK done\n",
      "temp 153mK done\n",
      "temp 158mK done\n",
      "temp 163mK done\n",
      "temp 168mK done\n",
      "temp 173mK done\n",
      "temp 178mK done\n",
      "temp 183mK done\n",
      "temp 188mK done\n",
      "temp 193mK done\n",
      "temp 198mK done\n",
      "temp 203mK done\n",
      "temp 208mK done\n",
      "temp 218mK done\n",
      "temp 228mK done\n",
      "temp 238mK done\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def fit_amp_data(f_transl, amp, amp_err, amp_model, k):               #Performs the fit on our data for a single resonance.\n",
    "    least_squares = LeastSquares(f_transl, amp, amp_err, amp_model)\n",
    "    m = Minuit(least_squares, p1 = 1, p2 = 1e3, p3 = 4e4, p4 = -0.5, p5 = 0, p6 = 1e-9,  p7 = -1e-19, p8 = -1e-27)\n",
    "    m.limits['p5'] = (-0.002*1e9, 0.002*1e9)                #Every resonator likes his own starting points and parameters limits.\n",
    "\n",
    "    if k == 0:\n",
    "        m.values['p2'] = 5e4\n",
    "        m.values['p3'] = 4e5\n",
    "        m.limits['p2'] = (1e2, 1e6)\n",
    "        m.limits['p3'] = (1e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-6, 1e-6)\n",
    "        m.limits['p7'] = (-1e-13, 1e-13)\n",
    "        m.limits['p8'] = (-1e-22, 1e-22)\n",
    "\n",
    "    elif k == 1:\n",
    "        m.values['p3'] = 7e4\n",
    "        m.limits['p2'] = (1e2, 1e6)\n",
    "        m.limits['p3'] = (1e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    elif k == 2:\n",
    "        m.limits['p2'] = (1e3, 5e7)\n",
    "        m.limits['p3'] = (5e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    elif k == 3:\n",
    "        m.limits['p2'] = (1e3, 5e4)\n",
    "        m.limits['p3'] = (5e3, 1e5)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    fit = m.migrad()\n",
    "    #print(m)\n",
    "    return fit, m\n",
    "\n",
    "amp = np.zeros(1601)\n",
    "Q_i = np.zeros(shape = (len(temps),4))\n",
    "Q_i_err = np.zeros(shape = (len(temps),4))\n",
    "kork = np.zeros(shape = (len(temps),4))     #Kill or keep. It stores all the eventual bad points for our final fit.\n",
    "date = np.array(['Feb_16_2023-15_10_57', 'Feb_17_2023-17_42_07','Feb_16_2023-16_06_46', 'Feb_17_2023-10_01_04', 'Feb_17_2023-11_17_43', 'Feb_17_2023-14_19_39', 'Feb_17_2023-15_43_52', 'Feb_17_2023-15_56_04' ])\n",
    "j = 0           # index that counts the temperatures\n",
    "res_freqs = np.zeros(4)\n",
    "\n",
    "#Here we can eventually examine some specific cases for certain temperatures, or simply analize a random sample of two\n",
    "\n",
    "select = np.random.choice(temps)\n",
    "\n",
    "for temp in ttemps:       \n",
    "    i = 0\n",
    "\n",
    "    while i < len(date):        #Open the correct hdf5 file\n",
    "        try:\n",
    "            h5file = h5py.File('Values_different_frequency_sweeps_' + str(temp) + 'mK' + str(date[i]) + '.h5', 'r')\n",
    "            break\n",
    "        except:\n",
    "            try: \n",
    "                h5file = h5py.File('sweeps_' + str(temp) + 'mK' + str(date[i]) + '.h5', 'r')\n",
    "                break\n",
    "            except: i +=1\n",
    "\n",
    "    for k in range(4):      #Access the data in the file of the specified temperature. Store the data of all 4 resonators\n",
    "\n",
    "        f, i, q = get_single_res_data(h5file, temp, freq_window, k)\n",
    "\n",
    "        amp = ampl(i,q)\n",
    "        amp = amp / max(amp)\n",
    "\n",
    "        amp_err = np.append(amp[1:1601], [0])\n",
    "        amp_err = np.average(np.abs(amp[:1600] - amp_err[:1600]))\n",
    "        \n",
    "        f_min = f[np.where(amp == min(amp))]\n",
    "        f_transl = f - f_min        #This translation helps the fitting procedure. Purely computational, no physical meaning. The resonance frequency sits now at zero.                    \n",
    "        \n",
    "\n",
    "        fit, m = fit_amp_data(f_transl, amp, amp_err, amp_model, k)     #Perform the fit of the resonance profile with our model\n",
    "        valid, accurate = fit_check(m)\n",
    "        \n",
    "        Q_i[j][k] = fit.values[\"p3\"]\n",
    "        error_p3 = fit.errors[\"p3\"]\n",
    "        Q_i_err[j][k] = error_p3\n",
    "\n",
    "        if (valid == False or accurate == False):      \n",
    "            print('Problem encountered at temp ' + str(temp) + ' mK of the resonance number ' + str(k+1) + '.' )\n",
    "            kork[j][k] = temp       #Kill all non-convergent fits           \n",
    "\n",
    "        if (0.05*Q_i[j][k] < Q_i_err[j][k]) or (j > 1 and (Q_i[j][k]/Q_i[j-1][k]) > 10) or (j > 1 and (Q_i[j][k]/Q_i[j-1][k]) < 0.01):      \n",
    "            kork[j][k] = temp       #Kill highly deviating points or parameters with an error higher than 5%\n",
    "        \n",
    "        if (m.values['p3'] < m.values['p2']):\n",
    "            print('Weird parameters in ' + str(k) + 'th resonator, ' + str(temp) + 'mK: Total Q value should be lower than Internal Q Value. ')\n",
    "\n",
    "        if (k == 9):        #For a certain value of k = 0,1,2,3 plot everything important\n",
    "            print('Il valore di Q_i per il risonatore numero ' + str(k) + ' e per la temperatura ' + str(temp) + 'mK è:' + str(Q_i[j][k]) + '+-' + str(Q_i_err[j][k]))\n",
    "            plot_data_and_fit(f_transl, amp, amp_model(f_transl, *m.values))\n",
    "\n",
    "        if temp == min(ttemps):\n",
    "            res_freqs[k] = f_min\n",
    "    \n",
    "    print('temp ' + str(temp) + 'mK done')\n",
    "    h5file.close()\n",
    "    j += 1\n",
    "\n",
    "inv_Q_i = 1 / Q_i\n",
    "inv_Q_i_err = Q_i_err / Q_i / Q_i\n",
    "temps = 1e-3*ttemps  #We must rescale temperatures because they have to be expressed in Kelvins (and not mK) when we want to fit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 33.   0.   0.   0.]\n",
      " [ 35.   0.   0.   0.]\n",
      " [ 38.   0.   0.   0.]\n",
      " [ 40.   0.   0.   0.]\n",
      " [ 43.   0.   0.   0.]\n",
      " [ 45.   0.   0.   0.]\n",
      " [ 48.   0.   0.   0.]\n",
      " [ 50.   0.   0.   0.]\n",
      " [ 53.   0.   0.   0.]\n",
      " [ 55.   0.   0.   0.]\n",
      " [ 58.   0.   0.   0.]\n",
      " [ 60.   0.   0.   0.]\n",
      " [ 63.   0.   0.   0.]\n",
      " [ 65.   0.   0.   0.]\n",
      " [ 68.   0.   0.   0.]\n",
      " [ 70.   0.   0.   0.]\n",
      " [ 73.   0.   0.   0.]\n",
      " [ 75.   0.   0.   0.]\n",
      " [ 78.   0.   0.   0.]\n",
      " [ 80.   0.   0.   0.]\n",
      " [ 83.   0.   0.   0.]\n",
      " [ 85.   0.   0.   0.]\n",
      " [ 88.   0.   0.   0.]\n",
      " [ 90.   0.   0.   0.]\n",
      " [ 93.   0.   0.   0.]\n",
      " [ 95.   0.   0.   0.]\n",
      " [ 98.   0.   0.   0.]\n",
      " [100.   0.   0.   0.]\n",
      " [103.   0.   0.   0.]\n",
      " [105.   0.   0.   0.]\n",
      " [108.   0.   0.   0.]\n",
      " [110.   0.   0.   0.]\n",
      " [115.   0.   0.   0.]\n",
      " [118. 118.   0.   0.]\n",
      " [123.   0.   0.   0.]\n",
      " [128.   0.   0.   0.]\n",
      " [133.   0.   0.   0.]\n",
      " [138.   0.   0.   0.]\n",
      " [143.   0.   0.   0.]\n",
      " [148.   0.   0.   0.]\n",
      " [153.   0.   0.   0.]\n",
      " [158.   0.   0.   0.]\n",
      " [163.   0.   0.   0.]\n",
      " [168.   0.   0.   0.]\n",
      " [173.   0.   0.   0.]\n",
      " [178.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]]\n"
     ]
    }
   ],
   "source": [
    "print(kork) #To have an idea of what exactly we have killed"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$\\color{blue}\\textbf{Second fit:} \\\\$\n",
    "$\\textbf{Remember that you have to mediate on the four resonators sooner or later}$, in order to account for small differences in the vaues stimated for $Q_i$. Now we want to fit the graph we obtained.$\\\\$\n",
    "From the second fit we want to get the value of the gap parameter at 0 K $[\\Delta(0)]$ for our superconductor.\n",
    "\n",
    "The interpolating function we will use is $\\begin{equation}\n",
    "\\frac{1}{Q_i(T)} = \\frac{1}{Q_i(0)} + \\frac{\\sigma_{1}}{\\sigma_{2}} \\simeq \\frac{1}{Q_i(0)} + \\frac{2\\alpha}{\\pi}\\frac{e^{-\\frac{\\Delta (0)}{k_{B} T}}K_{0}(\\frac{\\hbar \\omega}{2 k_{B} T})\\Big[ 2 \\sinh (\\frac{\\hbar \\omega}{2 k_{B} T})\\Big]}{\\Big[1 - 2 e^{-\\frac{\\Delta (0)}{k_{B}T}}e^{-\\frac{\\hbar \\omega}{2 k_{B} T}} I_{0}(\\frac{\\hbar \\omega}{2 k_{B}T}) \\Big]} \\end{equation} \\\\$\n",
    "Is the $\\omega$ the (angular) resonance frequency of the oscillator? In that case it varies with T and you could account for it when you do the fit.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46 point(s) removed\n",
      "RESONATOR NUMBER  1\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 47.41 (chi2/ndof = 7.9)    │              Nfcn = 139              │\n",
      "│ EDM = 1.19e-05 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │       SOME Parameters at limit       │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │   200e3   │    5e3    │            │            │  30000  │ 200000  │       │\n",
      "│ 1 │ p2   │   0.632   │   0.030   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 25.53e-24 │ 0.15e-24  │            │            │  1e-23  │  5e-23  │       │\n",
      "│ 3 │ p4   │  33.60e9  │  0.34e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │       444  -0.00132 -7.19e-27         0 │\n",
      "│ p2 │  -0.00132  0.000909  4.46e-27         0 │\n",
      "│ p3 │ -7.19e-27  4.46e-27  2.19e-50         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 0 is 5347000000.0\n",
      "The interpolated value of the gap parameter is: ( 2.5533460437050335e-23 +- 1.480077252188995e-25 ) J\n",
      "In terms of eV, it is: ( 0.1595841277315646 +- 0.0009250482826181221 ) meV\n",
      "\n",
      "1 point(s) removed\n",
      "RESONATOR NUMBER  2\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 51.68 (chi2/ndof = 1.1)    │              Nfcn = 320              │\n",
      "│ EDM = 4.38e-07 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │        No Parameters at limit        │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  71.66e3  │  0.35e3   │            │            │  50000  │  90000  │       │\n",
      "│ 1 │ p2   │   0.111   │   0.009   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 19.79e-24 │ 0.21e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  35.03e9  │  0.35e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  1.24e+05    -0.938 -2.42e-23         0 │\n",
      "│ p2 │    -0.938  7.68e-05  1.85e-27         0 │\n",
      "│ p3 │ -2.42e-23  1.85e-27  4.45e-50         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 1 is 5575000000.0\n",
      "The interpolated value of the gap parameter is: ( 1.9789681539707726e-23 +- 2.110453904970635e-25 ) J\n",
      "In terms of eV, it is: ( 0.12368550962317329 +- 0.001319033690606647 ) meV\n",
      "\n",
      "0 point(s) removed\n",
      "RESONATOR NUMBER  3\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 68.28 (chi2/ndof = 1.5)    │              Nfcn = 258              │\n",
      "│ EDM = 2.79e-06 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │        No Parameters at limit        │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  38.58e3  │  0.09e3   │            │            │  30000  │  50000  │       │\n",
      "│ 1 │ p2   │   0.140   │   0.019   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 21.0e-24  │  0.4e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  35.7e9   │   0.4e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  8.75e+03    -0.515 -1.02e-23         0 │\n",
      "│ p2 │    -0.515  0.000371  6.93e-27         0 │\n",
      "│ p3 │ -1.02e-23  6.93e-27   1.3e-49         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 2 is 5674999999.999999\n",
      "The interpolated value of the gap parameter is: ( 2.104352008136751e-23 +- 3.5998429307542965e-25 ) J\n",
      "In terms of eV, it is: ( 0.13152200050854695 +- 0.0022499018317214355 ) meV\n",
      "\n",
      "0 point(s) removed\n",
      "RESONATOR NUMBER  4\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 233.5 (chi2/ndof = 5.0)    │              Nfcn = 491              │\n",
      "│ EDM = 5.52e-05 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │       SOME Parameters at limit       │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  62.77e3  │  0.08e3   │            │            │  10000  │  90000  │       │\n",
      "│ 1 │ p2   │ 40.34e-3  │  0.12e-3  │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 17.00e-24 │ 0.05e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  37.6e9   │   0.4e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  7.04e+03   0.00289 -5.84e-29         0 │\n",
      "│ p2 │   0.00289  1.45e-08  3.24e-33         0 │\n",
      "│ p3 │ -5.84e-29  3.24e-33  1.04e-55         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 3 is 5982999999.999999\n",
      "The interpolated value of the gap parameter is: ( 1.7000000574179614e-23 +- 4.520039649501031e-26 ) J\n",
      "In terms of eV, it is: ( 0.1062500035886226 +- 0.00028250247809381444 ) meV\n",
      "\n",
      "Recap:\n",
      "delta (mev) = [0.15958413 0.12368551 0.131522   0.10625   ]\n",
      "errors (mev) =  [0.00092505 0.00131903 0.0022499  0.0002825 ]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def fit_Qi_vs_temp(temp, inv_Q_i, inv_Q_i_err, suggestions):\n",
    "    least_squares = LeastSquares(temp, inv_Q_i, inv_Q_i_err, inv_Qi_model)\n",
    "    m = Minuit(least_squares, p1 = suggestions[0 , res], p2 = suggestions[3 , res], p3 = suggestions[6 , res], p4 = suggestions[11, res])  # starting values for our parameters\n",
    "    m.limits['p1'] = (suggestions[1 , res], suggestions[2 , res])           \n",
    "    m.limits['p2'] = (suggestions[4 , res], suggestions[5 , res])\n",
    "    m.limits['p3'] = (suggestions[7 , res], suggestions[8 , res])\n",
    "    m.fixed['p4'] = True\n",
    "    #m.limits['p4'] = ((suggestions[9 , res], suggestions[10 , res]))\n",
    "    fit = m.migrad()        #This is the command that performs the fit\n",
    "    return fit, m \n",
    "\n",
    "# Erase these lines when you're done with trial and error\n",
    "\n",
    "suggestions_fit_inv_Q_i = np.zeros(shape=(12, 4))           # Attempt to automatize fit suggestions. Order of the array is: p_i_sugg, p_i_liminf, p_i_limsup for i in [1,3] and in the end p_4_sugg\n",
    "suggestions_fit_inv_Q_i[:,0] = np.array([3.5e5, 30e3, 2e5, .85, 0.01, 0.99, 2.6e-23, 1e-23, 5e-23, 2*np.pi*freq_window[0]*1e9, 2*np.pi*freq_window[1]*1e9, 2* np.pi *5.347e9])\n",
    "suggestions_fit_inv_Q_i[:,1] = np.array([7e4, 50e3, 90e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[2]*1e9, 2*np.pi*freq_window[3]*1e9, 2* np.pi *5.575e9]) \n",
    "suggestions_fit_inv_Q_i[:,2] = np.array([4e4, 30e3, 50e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[4]*1e9, 2*np.pi*freq_window[5]*1e9, 2* np.pi *5.675e9]) \n",
    "suggestions_fit_inv_Q_i[:,3] = np.array([6e4, 10e3, 90e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[6]*1e9, 2*np.pi*freq_window[7]*1e9, 2* np.pi *5.983e9])  \n",
    "\n",
    "# Trying to fit\n",
    "\n",
    "delta = np.zeros(shape = Q_i[0,:].shape)\n",
    "delta_err = np.zeros(shape = Q_i[0,:].shape)\n",
    "\n",
    "limit = np.array([50]*4)\n",
    "\n",
    "res = 0\n",
    "indexes = np.empty(0)\n",
    "\n",
    "for k in range(4):\n",
    "\n",
    "    inv = inv_Q_i[:55, k]\n",
    "    inv_err = inv_Q_i_err[:55, k]\n",
    "\n",
    "    for j in range(len(inv)):\n",
    "        if kork[j][k] == ttemps[j]:\n",
    "            indexes = np.append(indexes, [j])\n",
    "    \n",
    "    indexes = np.asarray(indexes, dtype = 'int')\n",
    "    temps = np.delete(temps, indexes)\n",
    "    temps = temps[:limit[k]]\n",
    "    inv = np.delete(inv, indexes)\n",
    "    inv = inv[:limit[k]]\n",
    "    inv_err = np.delete(inv_err, indexes)\n",
    "    inv_err = inv_err[:limit[k]]\n",
    "    print(str(len(ttemps) - abs(len(indexes) - len(ttemps))) + ' point(s) removed')  \n",
    "\n",
    "    fit, m = fit_Qi_vs_temp(temps, inv, inv_err, suggestions_fit_inv_Q_i)        # Fit execution\n",
    "\n",
    "    valid, accurate = fit_check(m)             #Fit check\n",
    "    print('RESONATOR NUMBER ', k+1)\n",
    "\n",
    "    if(valid == False or accurate == False):\n",
    "        print('There has been some trouble with the fit of the resonance number ' + str(k+1) +'. \\n Make a check!' )\n",
    "    print(fit)\n",
    "    \n",
    "    plot_data_and_fit(temps, inv, inv_Qi_model(temps, *m.values), inv_err, x_axis = 'Temperature [K]', y_axis = '1 / $Q_i$', title = 'Plot of 1 / $Q_i$ vs temperature (resonator number ' + str(k+1) + ')')\n",
    "        \n",
    "    delta[k]= fit.values[\"p3\"]                  #Get the delta parameter\n",
    "    delta_err[k] = fit.errors[\"p3\"]\n",
    "\n",
    "    print('Resonance frequency for resonator ' + str(k) + ' is ' + str(m.values['p4']/(2*np.pi)))\n",
    "    print('The interpolated value of the gap parameter is: (', delta[k], '+-', delta_err[k], ') J')\n",
    "    print('In terms of eV, it is: (', delta[k] / ( 1.6e-19) * 1e3, '+-', delta_err[k] / ( 1.6e-19) * 1e3,') meV\\n' )\n",
    "    temps = ttemps*1e-3\n",
    "    indexes = np.empty(0)\n",
    "    res += 1\n",
    "\n",
    "print('Recap:')\n",
    "print('delta (mev) =', delta/ ( 1.6e-19) * 1e3)\n",
    "print('errors (mev) = ', delta_err/ ( 1.6e-19) * 1e3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The measured value of the gap is (averaged on the 2 central resonances, the , meaningful ones: ( 0.12760375506586014 +- 0.0039182454426868255 ) mev\n",
      "BCS predicts (if T_c = 0.84 K) a gap of :  0.12786190389000002 mev or  2.04579046224e-23 0 J\n",
      "The resonance frequencies at 33 mK: 5346450000.0 , 5575828125.0 , 5674846875.0 , 5982336875.0\n"
     ]
    }
   ],
   "source": [
    "\n",
    "gap_measured = (delta[1] + delta[2]) / 2 / (1.6e-19) * 1000 \n",
    "sqrt_error_gap_measured = abs(delta[1] - delta[2]) / 2 / (1.6e-19) * 1000 \n",
    "\n",
    "print('The measured value of the gap is (averaged on the 2 central resonances, the , meaningful ones: (', gap_measured, '+-', sqrt_error_gap_measured, ') mev')\n",
    "\n",
    "T_c = 0.84\n",
    "gap_0K = 1.764 * sc.k * T_c\n",
    "print('BCS predicts (if T_c =', T_c,  'K) a gap of : ', gap_0K / (1.6e-19) * 1000, 'mev or ', gap_0K, 0 ,'J')\n",
    "print('The resonance frequencies at 33 mK: ' + str(res_freqs[0]) + ' , ' + str(res_freqs[1]) + ' , ' + str(res_freqs[2]) + ' , ' + str(res_freqs[3]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "fca98ced75e3b70b02ac3b0fddc14254b9e3b048d240659196fc27e019c1f4a1"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following jupyter allows us to analise and fit the retrieved data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cmath\n",
    "import math\n",
    "from iminuit.cost import LeastSquares\n",
    "from iminuit import cost\n",
    "import time\n",
    "from iminuit import Minuit, cost\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import h5py\n",
    "from PIL import Image\n",
    "import scipy.special as ss\n",
    "import scipy.constants as sc\n",
    "\n",
    "def ampl(i, q):\n",
    "    return np.power((np.power(q, 2) + np.power(i, 2)), 1/2)\n",
    "\n",
    "def phase(i, q):\n",
    "    return(np.arctan(q / i))\n",
    "\n",
    "def amp_model(x, p1 , p2 , p3, p4, p5, p6,  p7, p8):\n",
    "    return abs((p6*(x) + p7*x**2 + p8*x**3) + p1*(1 - cmath.exp(1j*p4)*p2*(p2**-1 - p3**-1) / (1 + 2j * p2 * ( x - p5 ) / f_min[0] )))\n",
    "\n",
    "def new_amp_model(x, p1, p2 , p3, p4, p5, p6,  p7, p8):\n",
    "    return (p6*x + p7*x**2 + p8*x**3) + p1 * abs ((1 - (1 - p2 / p3) * cmath.exp(1j*p4) / (1 + 2j * p2 * ( x - p5 ) / p5 )))\n",
    "\n",
    "def inv_Qi_model(x, p1, p2, p3, p4):        \n",
    "    return  1/p1 + (2*p2*np.exp(-p3/(sc.k*x))*2*np.sinh(sc.hbar*p4/(2*sc.k*x))*ss.kv(0, sc.hbar*p4/(2*sc.k*x)))/(np.pi*(1-2*np.exp(-p3/(sc.k*x))*np.exp(-sc.hbar*p4/(2*sc.k*x))*ss.iv(0,sc.hbar*p4/(2*sc.k*x))))\n",
    "\n",
    "def plot_amp_and_phase(i, q, f, number_res):        #Plots the amplitude vs f and phase vs f for a single resonator given the i, q, f values\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2)            #And that's for the resonator number 'number_res + 1'\n",
    "    fig.suptitle(\"Plots relative to the resonator number \" + str(number_res + 1) + \"\\n\\n\\n\")\n",
    "\n",
    "    ax1.plot(f, amp, label = 'Amplitude vs f')\n",
    "    ax1.set_title( \"Amplitude\")\n",
    "    ax1.set_xlabel(\"f [GHz]\")\n",
    "    ax1.set_ylabel(\"Amplitude\")\n",
    "\n",
    "    fig.subplots_adjust(wspace=.4)\n",
    "\n",
    "    ax2.set_title(\"Phase\")\n",
    "    ax2.set_xlabel(\"f [GHz]\")\n",
    "    ax2.set_ylabel(\"$\\Phi \\; [rad]$\")\n",
    "\n",
    "    plt.plot(f, phase(i, q), label = 'Phase vs f')\n",
    "    plt.show()\n",
    "    \n",
    "def get_single_res_data(h5file, temp, freq_window, number_res):     # Allows to get important data from the hdf5 file\n",
    "    f1 = freq_window[number_res * 2]\n",
    "    f2 = freq_window[number_res * 2 + 1]\n",
    "    f = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['freqs'][number_res, :]*1e9\n",
    "    i = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['I'][:]\n",
    "    q = h5file['Temp_' + str(temp) + 'mK']['temp_' + str(temp) + 'mK_Start' + str(f1) + '_Stop' + str(f2) + 'GHz']['Q'][:]\n",
    "    return f, i, q\n",
    "\n",
    "def plot_data_and_fit(freqs, original_data, fitted_points, original_data_err = 0., x_axis = 'frequency [Hz]', y_axis = 'magnitude $S_{21}$', title = 'Amplitude vs frequency'):     # Plots superposition of fit and data\n",
    "    plt.errorbar(freqs, original_data, yerr = original_data_err, xerr=None, marker='o', markersize=.8, barsabove=True, elinewidth=.8, capsize=.8, linewidth=0, label = 'data')\n",
    "    plt.title(title)\n",
    "    plt.xlabel(x_axis)\n",
    "    plt.ylabel(y_axis)\n",
    "    plt.plot(freqs, fitted_points, label = 'fit', linewidth = .2)\n",
    "    #plt.title('Superposition of original data and fit')\n",
    "    plt.show()\n",
    "\n",
    "def fit_check(m):\n",
    "    valid, accurate = m.valid, m.accurate\n",
    "    return valid, accurate\n",
    "\n",
    "def new_fit(f, amp, amp_err, new_amp_model): # new fit which is performed without frequency tranlsation\n",
    "    least_squares = LeastSquares(f, amp, amp_err, new_amp_model)\n",
    "    m = Minuit(least_squares, p1 = 1, p2 = 1e4, p3 = 6e4, p4 = -0.5, p5 = 5.5, p6 = -1e2,  p7 = -5e4, p8 = 1e-1)  # starting values for our parameters\n",
    "    m.limits['p2'] = (1e3, 1e7)\n",
    "    m.limits['p3'] = (1e3, 1e7)\n",
    "    m.limits['p5'] = (5.2, 6.0)    \n",
    "    fit = m.migrad()        #This is the command that performs the fit\n",
    "    return fit, m  \n",
    "\n",
    "freq_window = np.array([5.340, 5.355, 5.568, 5.583, 5.667, 5.682, 5.978, 5.987])\n",
    "    "
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First of all we decide what uncertainty assign to every measure of the $S_{21}$ module. We acquired data using two different bandwidth settings: $10Hz$ and $30Hz$. In particular, we have data for temperatures between $33mK$ and $260mK$. Much of that (multiples of $5$ from $35mK$ to $115mK$ circa) have been acquired in the cleanest way possible, by using the lowest bandwidth. How can we set up errors so they account for this difference in precision? Better: how does signal precision manifest itself when we compute $S_{21}$ amplitude? To answer these questions we should consider the two different dataset in a certain configuration, for example at the intermediate temperature of $105mK$ and $103mK$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x23b40988220>]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h5file_10 = h5py.File('Values_different_frequency_sweeps_105mKFeb_17_2023-17_42_07.h5', 'r')\n",
    "freq_10, i_10, q_10 = get_single_res_data(h5file_10, 105, freq_window, 1)\n",
    "h5file_30 = h5py.File('Values_different_frequency_sweeps_103mKFeb_16_2023-16_06_46.h5', 'r')\n",
    "freq_30, i_30, q_30 = get_single_res_data(h5file_30, 103, freq_window, 1)\n",
    "\n",
    "amp_10 = ampl(i_10, q_10)/np.max(ampl(i_10, q_10))\n",
    "amp_30 = ampl(i_30, q_30)/np.max(ampl(i_30, q_30))\n",
    "\n",
    "nearby_diff_10 = abs(amp_10 - np.append(amp_10[1:1601], [0]))\n",
    "nearby_diff_30 = abs(amp_30 - np.append(amp_30[1:1601], [0]))\n",
    "\n",
    "plt.plot(freq_30[:1600], nearby_diff_30[:1600])\n",
    "plt.plot(freq_10[:1600], nearby_diff_10[:1600])"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see, by focusing on a range of frequencies far away from the resonance (this is fundamental: in this region background noise is highly dominating when passing from a frequency point to the next), that background noise is reduced by about a factor of $2$. We should the information stored in the arrays we defined in the code cell above ($\\textit{nearby\\_diff\\_30}$ and $\\textit{nearby\\_diff\\_10}$) to recover a good estimation for the uncertainty. A good idea would be to compute the average value of these arrays (we ensured they are positive - definite, so indeed we are computing an average error). Let's now proceed and open the data files. First of all we define the temperatures we are going to analyse and after which we named our datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Set parameters to open the correct file and define necessary variables\n",
    "temps = np.arange(35, 120, 5)  \n",
    "temps = np.append(temps, np.arange(33, 113, 5))     \n",
    "temps = np.append(temps, np.arange(118, 208, 5))\n",
    "temps = np.append(temps, np.arange(208, 248, 10))\n",
    "#temps = np.append(temps, np.arange(288, 358, 10))\n",
    "\n",
    "temps = np.sort(temps)\n",
    "ttemps = temps #temporary variable to store temps. It will be useful later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "temp 33mK done\n",
      "temp 35mK done\n",
      "temp 38mK done\n",
      "temp 40mK done\n",
      "temp 43mK done\n",
      "temp 45mK done\n",
      "temp 48mK done\n",
      "temp 50mK done\n",
      "temp 53mK done\n",
      "temp 55mK done\n",
      "temp 58mK done\n",
      "temp 60mK done\n",
      "temp 63mK done\n",
      "temp 65mK done\n",
      "temp 68mK done\n",
      "temp 70mK done\n",
      "temp 73mK done\n",
      "temp 75mK done\n",
      "temp 78mK done\n",
      "temp 80mK done\n",
      "temp 83mK done\n",
      "temp 85mK done\n",
      "temp 88mK done\n",
      "temp 90mK done\n",
      "temp 93mK done\n",
      "temp 95mK done\n",
      "temp 98mK done\n",
      "temp 100mK done\n",
      "temp 103mK done\n",
      "temp 105mK done\n",
      "temp 108mK done\n",
      "temp 110mK done\n",
      "temp 115mK done\n",
      "temp 118mK done\n",
      "temp 123mK done\n",
      "temp 128mK done\n",
      "temp 133mK done\n",
      "temp 138mK done\n",
      "temp 143mK done\n",
      "temp 148mK done\n",
      "temp 153mK done\n",
      "temp 158mK done\n",
      "temp 163mK done\n",
      "temp 168mK done\n",
      "temp 173mK done\n",
      "temp 178mK done\n",
      "temp 183mK done\n",
      "temp 188mK done\n",
      "temp 193mK done\n",
      "temp 198mK done\n",
      "temp 203mK done\n",
      "temp 208mK done\n",
      "temp 218mK done\n",
      "temp 228mK done\n",
      "temp 238mK done\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def fit_amp_data(f_transl, amp, amp_err, amp_model, k):               #Performs the fit on our data for a single resonance.\n",
    "    least_squares = LeastSquares(f_transl, amp, amp_err, amp_model)\n",
    "    m = Minuit(least_squares, p1 = 1, p2 = 1e3, p3 = 4e4, p4 = -0.5, p5 = 0, p6 = 1e-9,  p7 = -1e-19, p8 = -1e-27)\n",
    "    m.limits['p5'] = (-0.002*1e9, 0.002*1e9)                #Every resonator likes his own starting points and parameters limits.\n",
    "\n",
    "    if k == 0:\n",
    "        m.values['p2'] = 5e4\n",
    "        m.values['p3'] = 4e5\n",
    "        m.limits['p2'] = (1e2, 1e6)\n",
    "        m.limits['p3'] = (1e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-6, 1e-6)\n",
    "        m.limits['p7'] = (-1e-13, 1e-13)\n",
    "        m.limits['p8'] = (-1e-22, 1e-22)\n",
    "\n",
    "    elif k == 1:\n",
    "        m.values['p3'] = 7e4\n",
    "        m.limits['p2'] = (1e2, 1e6)\n",
    "        m.limits['p3'] = (1e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    elif k == 2:\n",
    "        m.limits['p2'] = (1e3, 5e7)\n",
    "        m.limits['p3'] = (5e3, 1e7)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    elif k == 3:\n",
    "        m.limits['p2'] = (1e3, 5e4)\n",
    "        m.limits['p3'] = (5e3, 1e5)\n",
    "        m.limits['p6'] = (-1e-7, 1e-7)\n",
    "        m.limits['p7'] = (-1e-17, 1e-17)\n",
    "        m.limits['p8'] = (-1e-27, 1e-27)\n",
    "\n",
    "    fit = m.migrad()\n",
    "    #print(m)\n",
    "    return fit, m\n",
    "\n",
    "amp = np.zeros(1601)\n",
    "Q_i = np.zeros(shape = (len(temps),4))\n",
    "Q_i_err = np.zeros(shape = (len(temps),4))\n",
    "kork = np.zeros(shape = (len(temps),4))     #Kill or keep. It stores all the eventual bad points for our final fit.\n",
    "date = np.array(['Feb_16_2023-15_10_57', 'Feb_17_2023-17_42_07','Feb_16_2023-16_06_46', 'Feb_17_2023-10_01_04', 'Feb_17_2023-11_17_43', 'Feb_17_2023-14_19_39', 'Feb_17_2023-15_43_52', 'Feb_17_2023-15_56_04' ])\n",
    "j = 0           # index that counts the temperatures\n",
    "res_freqs = np.zeros(4)\n",
    "\n",
    "#Here we can eventually examine some specific cases for certain temperatures, or simply analize a random sample of two\n",
    "\n",
    "select = np.random.choice(temps)\n",
    "\n",
    "for temp in ttemps:       \n",
    "    i = 0\n",
    "\n",
    "    while i < len(date):        #Open the correct hdf5 file\n",
    "        try:\n",
    "            h5file = h5py.File('Values_different_frequency_sweeps_' + str(temp) + 'mK' + str(date[i]) + '.h5', 'r')\n",
    "            break\n",
    "        except:\n",
    "            try: \n",
    "                h5file = h5py.File('sweeps_' + str(temp) + 'mK' + str(date[i]) + '.h5', 'r')\n",
    "                break\n",
    "            except: i +=1\n",
    "\n",
    "    for k in range(4):      #Access the data in the file of the specified temperature. Store the data of all 4 resonators\n",
    "\n",
    "        f, i, q = get_single_res_data(h5file, temp, freq_window, k)\n",
    "\n",
    "        amp = ampl(i,q)\n",
    "        amp = amp / max(amp)\n",
    "\n",
    "        amp_err = np.append(amp[1:1601], [0])\n",
    "        amp_err = np.average(np.abs(amp[:1600] - amp_err[:1600]))\n",
    "        \n",
    "        f_min = f[np.where(amp == min(amp))]\n",
    "        f_transl = f - f_min        #This translation helps the fitting procedure. Purely computational, no physical meaning. The resonance frequency sits now at zero.                    \n",
    "        \n",
    "\n",
    "        fit, m = fit_amp_data(f_transl, amp, amp_err, amp_model, k)     #Perform the fit of the resonance profile with our model\n",
    "        valid, accurate = fit_check(m)\n",
    "        \n",
    "        Q_i[j][k] = fit.values[\"p3\"]\n",
    "        error_p3 = fit.errors[\"p3\"]\n",
    "        Q_i_err[j][k] = error_p3\n",
    "\n",
    "        if (valid == False or accurate == False):      \n",
    "            print('Problem encountered at temp ' + str(temp) + ' mK of the resonance number ' + str(k+1) + '.' )\n",
    "            kork[j][k] = temp       #Kill all non-convergent fits           \n",
    "\n",
    "        if (0.05*Q_i[j][k] < Q_i_err[j][k]) or (j > 1 and (Q_i[j][k]/Q_i[j-1][k]) > 10) or (j > 1 and (Q_i[j][k]/Q_i[j-1][k]) < 0.01):      \n",
    "            kork[j][k] = temp       #Kill highly deviating points or parameters with an error higher than 5%\n",
    "        \n",
    "        if (m.values['p3'] < m.values['p2']):\n",
    "            print('Weird parameters in ' + str(k) + 'th resonator, ' + str(temp) + 'mK: Total Q value should be lower than Internal Q Value. ')\n",
    "\n",
    "        if (k == 9):        #For a certain value of k = 0,1,2,3 plot everything important\n",
    "            print('Il valore di Q_i per il risonatore numero ' + str(k) + ' e per la temperatura ' + str(temp) + 'mK è:' + str(Q_i[j][k]) + '+-' + str(Q_i_err[j][k]))\n",
    "            plot_data_and_fit(f_transl, amp, amp_model(f_transl, *m.values))\n",
    "\n",
    "        if temp == min(ttemps):\n",
    "            res_freqs[k] = f_min\n",
    "    \n",
    "    print('temp ' + str(temp) + 'mK done')\n",
    "    h5file.close()\n",
    "    j += 1\n",
    "\n",
    "inv_Q_i = 1 / Q_i\n",
    "inv_Q_i_err = Q_i_err / Q_i / Q_i\n",
    "temps = 1e-3*ttemps  #We must rescale temperatures because they have to be expressed in Kelvins (and not mK) when we want to fit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 33.   0.   0.   0.]\n",
      " [ 35.   0.   0.   0.]\n",
      " [ 38.   0.   0.   0.]\n",
      " [ 40.   0.   0.   0.]\n",
      " [ 43.   0.   0.   0.]\n",
      " [ 45.   0.   0.   0.]\n",
      " [ 48.   0.   0.   0.]\n",
      " [ 50.   0.   0.   0.]\n",
      " [ 53.   0.   0.   0.]\n",
      " [ 55.   0.   0.   0.]\n",
      " [ 58.   0.   0.   0.]\n",
      " [ 60.   0.   0.   0.]\n",
      " [ 63.   0.   0.   0.]\n",
      " [ 65.   0.   0.   0.]\n",
      " [ 68.   0.   0.   0.]\n",
      " [ 70.   0.   0.   0.]\n",
      " [ 73.   0.   0.   0.]\n",
      " [ 75.   0.   0.   0.]\n",
      " [ 78.   0.   0.   0.]\n",
      " [ 80.   0.   0.   0.]\n",
      " [ 83.   0.   0.   0.]\n",
      " [ 85.   0.   0.   0.]\n",
      " [ 88.   0.   0.   0.]\n",
      " [ 90.   0.   0.   0.]\n",
      " [ 93.   0.   0.   0.]\n",
      " [ 95.   0.   0.   0.]\n",
      " [ 98.   0.   0.   0.]\n",
      " [100.   0.   0.   0.]\n",
      " [103.   0.   0.   0.]\n",
      " [105.   0.   0.   0.]\n",
      " [108.   0.   0.   0.]\n",
      " [110.   0.   0.   0.]\n",
      " [115.   0.   0.   0.]\n",
      " [118. 118.   0.   0.]\n",
      " [123.   0.   0.   0.]\n",
      " [128.   0.   0.   0.]\n",
      " [133.   0.   0.   0.]\n",
      " [138.   0.   0.   0.]\n",
      " [143.   0.   0.   0.]\n",
      " [148.   0.   0.   0.]\n",
      " [153.   0.   0.   0.]\n",
      " [158.   0.   0.   0.]\n",
      " [163.   0.   0.   0.]\n",
      " [168.   0.   0.   0.]\n",
      " [173.   0.   0.   0.]\n",
      " [178.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]\n",
      " [  0.   0.   0.   0.]]\n"
     ]
    }
   ],
   "source": [
    "print(kork) #To have an idea of what exactly we have killed"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$\\color{blue}\\textbf{Second fit:} \\\\$\n",
    "$\\textbf{Remember that you have to mediate on the four resonators sooner or later}$, in order to account for small differences in the vaues stimated for $Q_i$. Now we want to fit the graph we obtained.$\\\\$\n",
    "From the second fit we want to get the value of the gap parameter at 0 K $[\\Delta(0)]$ for our superconductor.\n",
    "\n",
    "The interpolating function we will use is $\\begin{equation}\n",
    "\\frac{1}{Q_i(T)} = \\frac{1}{Q_i(0)} + \\frac{\\sigma_{1}}{\\sigma_{2}} \\simeq \\frac{1}{Q_i(0)} + \\frac{2\\alpha}{\\pi}\\frac{e^{-\\frac{\\Delta (0)}{k_{B} T}}K_{0}(\\frac{\\hbar \\omega}{2 k_{B} T})\\Big[ 2 \\sinh (\\frac{\\hbar \\omega}{2 k_{B} T})\\Big]}{\\Big[1 - 2 e^{-\\frac{\\Delta (0)}{k_{B}T}}e^{-\\frac{\\hbar \\omega}{2 k_{B} T}} I_{0}(\\frac{\\hbar \\omega}{2 k_{B}T}) \\Big]} \\end{equation} \\\\$\n",
    "Is the $\\omega$ the (angular) resonance frequency of the oscillator? In that case it varies with T and you could account for it when you do the fit.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46 point(s) removed\n",
      "RESONATOR NUMBER  1\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 47.41 (chi2/ndof = 7.9)    │              Nfcn = 139              │\n",
      "│ EDM = 1.19e-05 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │       SOME Parameters at limit       │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │   200e3   │    5e3    │            │            │  30000  │ 200000  │       │\n",
      "│ 1 │ p2   │   0.632   │   0.030   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 25.53e-24 │ 0.15e-24  │            │            │  1e-23  │  5e-23  │       │\n",
      "│ 3 │ p4   │  33.60e9  │  0.34e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │       444  -0.00132 -7.19e-27         0 │\n",
      "│ p2 │  -0.00132  0.000909  4.46e-27         0 │\n",
      "│ p3 │ -7.19e-27  4.46e-27  2.19e-50         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 0 is 5347000000.0\n",
      "The interpolated value of the gap parameter is: ( 2.5533460437050335e-23 +- 1.480077252188995e-25 ) J\n",
      "In terms of eV, it is: ( 0.1595841277315646 +- 0.0009250482826181221 ) meV\n",
      "\n",
      "1 point(s) removed\n",
      "RESONATOR NUMBER  2\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 51.68 (chi2/ndof = 1.1)    │              Nfcn = 320              │\n",
      "│ EDM = 4.38e-07 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │        No Parameters at limit        │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  71.66e3  │  0.35e3   │            │            │  50000  │  90000  │       │\n",
      "│ 1 │ p2   │   0.111   │   0.009   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 19.79e-24 │ 0.21e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  35.03e9  │  0.35e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  1.24e+05    -0.938 -2.42e-23         0 │\n",
      "│ p2 │    -0.938  7.68e-05  1.85e-27         0 │\n",
      "│ p3 │ -2.42e-23  1.85e-27  4.45e-50         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 1 is 5575000000.0\n",
      "The interpolated value of the gap parameter is: ( 1.9789681539707726e-23 +- 2.110453904970635e-25 ) J\n",
      "In terms of eV, it is: ( 0.12368550962317329 +- 0.001319033690606647 ) meV\n",
      "\n",
      "0 point(s) removed\n",
      "RESONATOR NUMBER  3\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 68.28 (chi2/ndof = 1.5)    │              Nfcn = 258              │\n",
      "│ EDM = 2.79e-06 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │        No Parameters at limit        │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  38.58e3  │  0.09e3   │            │            │  30000  │  50000  │       │\n",
      "│ 1 │ p2   │   0.140   │   0.019   │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 21.0e-24  │  0.4e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  35.7e9   │   0.4e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  8.75e+03    -0.515 -1.02e-23         0 │\n",
      "│ p2 │    -0.515  0.000371  6.93e-27         0 │\n",
      "│ p3 │ -1.02e-23  6.93e-27   1.3e-49         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 2 is 5674999999.999999\n",
      "The interpolated value of the gap parameter is: ( 2.104352008136751e-23 +- 3.5998429307542965e-25 ) J\n",
      "In terms of eV, it is: ( 0.13152200050854695 +- 0.0022499018317214355 ) meV\n",
      "\n",
      "0 point(s) removed\n",
      "RESONATOR NUMBER  4\n",
      "┌─────────────────────────────────────────────────────────────────────────┐\n",
      "│                                Migrad                                   │\n",
      "├──────────────────────────────────┬──────────────────────────────────────┤\n",
      "│ FCN = 233.5 (chi2/ndof = 5.0)    │              Nfcn = 491              │\n",
      "│ EDM = 5.52e-05 (Goal: 0.0002)    │                                      │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│          Valid Minimum           │       SOME Parameters at limit       │\n",
      "├──────────────────────────────────┼──────────────────────────────────────┤\n",
      "│ Below EDM threshold (goal x 10)  │           Below call limit           │\n",
      "├───────────────┬──────────────────┼───────────┬─────────────┬────────────┤\n",
      "│  Covariance   │     Hesse ok     │ Accurate  │  Pos. def.  │ Not forced │\n",
      "└───────────────┴──────────────────┴───────────┴─────────────┴────────────┘\n",
      "┌───┬──────┬───────────┬───────────┬────────────┬────────────┬─────────┬─────────┬───────┐\n",
      "│   │ Name │   Value   │ Hesse Err │ Minos Err- │ Minos Err+ │ Limit-  │ Limit+  │ Fixed │\n",
      "├───┼──────┼───────────┼───────────┼────────────┼────────────┼─────────┼─────────┼───────┤\n",
      "│ 0 │ p1   │  62.77e3  │  0.08e3   │            │            │  10000  │  90000  │       │\n",
      "│ 1 │ p2   │ 40.34e-3  │  0.12e-3  │            │            │  0.01   │  0.99   │       │\n",
      "│ 2 │ p3   │ 17.00e-24 │ 0.05e-24  │            │            │ 1.7e-23 │  5e-23  │       │\n",
      "│ 3 │ p4   │  37.6e9   │   0.4e9   │            │            │         │         │  yes  │\n",
      "└───┴──────┴───────────┴───────────┴────────────┴────────────┴─────────┴─────────┴───────┘\n",
      "┌────┬─────────────────────────────────────────┐\n",
      "│    │        p1        p2        p3        p4 │\n",
      "├────┼─────────────────────────────────────────┤\n",
      "│ p1 │  7.04e+03   0.00289 -5.84e-29         0 │\n",
      "│ p2 │   0.00289  1.45e-08  3.24e-33         0 │\n",
      "│ p3 │ -5.84e-29  3.24e-33  1.04e-55         0 │\n",
      "│ p4 │         0         0         0         0 │\n",
      "└────┴─────────────────────────────────────────┘\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resonance frequency for resonator 3 is 5982999999.999999\n",
      "The interpolated value of the gap parameter is: ( 1.7000000574179614e-23 +- 4.520039649501031e-26 ) J\n",
      "In terms of eV, it is: ( 0.1062500035886226 +- 0.00028250247809381444 ) meV\n",
      "\n",
      "Recap:\n",
      "delta (mev) = [0.15958413 0.12368551 0.131522   0.10625   ]\n",
      "errors (mev) =  [0.00092505 0.00131903 0.0022499  0.0002825 ]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def fit_Qi_vs_temp(temp, inv_Q_i, inv_Q_i_err, suggestions):\n",
    "    least_squares = LeastSquares(temp, inv_Q_i, inv_Q_i_err, inv_Qi_model)\n",
    "    m = Minuit(least_squares, p1 = suggestions[0 , res], p2 = suggestions[3 , res], p3 = suggestions[6 , res], p4 = suggestions[11, res])  # starting values for our parameters\n",
    "    m.limits['p1'] = (suggestions[1 , res], suggestions[2 , res])           \n",
    "    m.limits['p2'] = (suggestions[4 , res], suggestions[5 , res])\n",
    "    m.limits['p3'] = (suggestions[7 , res], suggestions[8 , res])\n",
    "    m.fixed['p4'] = True\n",
    "    #m.limits['p4'] = ((suggestions[9 , res], suggestions[10 , res]))\n",
    "    fit = m.migrad()        #This is the command that performs the fit\n",
    "    return fit, m \n",
    "\n",
    "# Erase these lines when you're done with trial and error\n",
    "\n",
    "suggestions_fit_inv_Q_i = np.zeros(shape=(12, 4))           # Attempt to automatize fit suggestions. Order of the array is: p_i_sugg, p_i_liminf, p_i_limsup for i in [1,3] and in the end p_4_sugg\n",
    "suggestions_fit_inv_Q_i[:,0] = np.array([3.5e5, 30e3, 2e5, .85, 0.01, 0.99, 2.6e-23, 1e-23, 5e-23, 2*np.pi*freq_window[0]*1e9, 2*np.pi*freq_window[1]*1e9, 2* np.pi *5.347e9])\n",
    "suggestions_fit_inv_Q_i[:,1] = np.array([7e4, 50e3, 90e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[2]*1e9, 2*np.pi*freq_window[3]*1e9, 2* np.pi *5.575e9]) \n",
    "suggestions_fit_inv_Q_i[:,2] = np.array([4e4, 30e3, 50e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[4]*1e9, 2*np.pi*freq_window[5]*1e9, 2* np.pi *5.675e9]) \n",
    "suggestions_fit_inv_Q_i[:,3] = np.array([6e4, 10e3, 90e3, .85, 0.01, 0.99, 2.6e-23, 1.7e-23, 5e-23, 2*np.pi*freq_window[6]*1e9, 2*np.pi*freq_window[7]*1e9, 2* np.pi *5.983e9])  \n",
    "\n",
    "# Trying to fit\n",
    "\n",
    "delta = np.zeros(shape = Q_i[0,:].shape)\n",
    "delta_err = np.zeros(shape = Q_i[0,:].shape)\n",
    "\n",
    "limit = np.array([50]*4)\n",
    "\n",
    "res = 0\n",
    "indexes = np.empty(0)\n",
    "\n",
    "for k in range(4):\n",
    "\n",
    "    inv = inv_Q_i[:55, k]\n",
    "    inv_err = inv_Q_i_err[:55, k]\n",
    "\n",
    "    for j in range(len(inv)):\n",
    "        if kork[j][k] == ttemps[j]:\n",
    "            indexes = np.append(indexes, [j])\n",
    "    \n",
    "    indexes = np.asarray(indexes, dtype = 'int')\n",
    "    temps = np.delete(temps, indexes)\n",
    "    temps = temps[:limit[k]]\n",
    "    inv = np.delete(inv, indexes)\n",
    "    inv = inv[:limit[k]]\n",
    "    inv_err = np.delete(inv_err, indexes)\n",
    "    inv_err = inv_err[:limit[k]]\n",
    "    print(str(len(ttemps) - abs(len(indexes) - len(ttemps))) + ' point(s) removed')  \n",
    "\n",
    "    fit, m = fit_Qi_vs_temp(temps, inv, inv_err, suggestions_fit_inv_Q_i)        # Fit execution\n",
    "\n",
    "    valid, accurate = fit_check(m)             #Fit check\n",
    "    print('RESONATOR NUMBER ', k+1)\n",
    "\n",
    "    if(valid == False or accurate == False):\n",
    "        print('There has been some trouble with the fit of the resonance number ' + str(k+1) +'. \\n Make a check!' )\n",
    "    print(fit)\n",
    "    \n",
    "    plot_data_and_fit(temps, inv, inv_Qi_model(temps, *m.values), inv_err, x_axis = 'Temperature [K]', y_axis = '1 / $Q_i$', title = 'Plot of 1 / $Q_i$ vs temperature (resonator number ' + str(k+1) + ')')\n",
    "        \n",
    "    delta[k]= fit.values[\"p3\"]                  #Get the delta parameter\n",
    "    delta_err[k] = fit.errors[\"p3\"]\n",
    "\n",
    "    print('Resonance frequency for resonator ' + str(k) + ' is ' + str(m.values['p4']/(2*np.pi)))\n",
    "    print('The interpolated value of the gap parameter is: (', delta[k], '+-', delta_err[k], ') J')\n",
    "    print('In terms of eV, it is: (', delta[k] / ( 1.6e-19) * 1e3, '+-', delta_err[k] / ( 1.6e-19) * 1e3,') meV\\n' )\n",
    "    temps = ttemps*1e-3\n",
    "    indexes = np.empty(0)\n",
    "    res += 1\n",
    "\n",
    "print('Recap:')\n",
    "print('delta (mev) =', delta/ ( 1.6e-19) * 1e3)\n",
    "print('errors (mev) = ', delta_err/ ( 1.6e-19) * 1e3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The measured value of the gap is (averaged on the 2 central resonances, the , meaningful ones: ( 0.12760375506586014 +- 0.0039182454426868255 ) mev\n",
      "BCS predicts (if T_c = 0.84 K) a gap of :  0.12786190389000002 mev or  2.04579046224e-23 0 J\n",
      "The resonance frequencies at 33 mK: 5346450000.0 , 5575828125.0 , 5674846875.0 , 5982336875.0\n"
     ]
    }
   ],
   "source": [
    "\n",
    "gap_measured = (delta[1] + delta[2]) / 2 / (1.6e-19) * 1000 \n",
    "sqrt_error_gap_measured = abs(delta[1] - delta[2]) / 2 / (1.6e-19) * 1000 \n",
    "\n",
    "print('The measured value of the gap is (averaged on the 2 central resonances, the , meaningful ones: (', gap_measured, '+-', sqrt_error_gap_measured, ') mev')\n",
    "\n",
    "T_c = 0.84\n",
    "gap_0K = 1.764 * sc.k * T_c\n",
    "print('BCS predicts (if T_c =', T_c,  'K) a gap of : ', gap_0K / (1.6e-19) * 1000, 'mev or ', gap_0K, 0 ,'J')\n",
    "print('The resonance frequencies at 33 mK: ' + str(res_freqs[0]) + ' , ' + str(res_freqs[1]) + ' , ' + str(res_freqs[2]) + ' , ' + str(res_freqs[3]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "fca98ced75e3b70b02ac3b0fddc14254b9e3b048d240659196fc27e019c1f4a1"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
